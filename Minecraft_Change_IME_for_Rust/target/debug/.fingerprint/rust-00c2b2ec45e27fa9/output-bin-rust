{"$message_type":"diagnostic","message":"unused import: `ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":34,"byte_end":37,"line_start":1,"line_end":1,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"use std::{thread, time::Duration, ptr};","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":32,"byte_end":37,"line_start":1,"line_end":1,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"use std::{thread, time::Duration, ptr};","highlight_start":33,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `ptr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:1:35\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{thread, time::Duration, ptr};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `FindWindowA` and `Foundation::HWND`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":68,"byte_end":84,"line_start":3,"line_end":3,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    Foundation::HWND,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":245,"byte_end":256,"line_start":6,"line_end":6,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"        WindowsAndMessaging::{FindWindowA, GetForegroundWindow, GetWindowTextA},","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":68,"byte_end":91,"line_start":3,"line_end":4,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    Foundation::HWND,","highlight_start":5,"highlight_end":22},{"text":"    UI::{","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\main.rs","byte_start":245,"byte_end":258,"line_start":6,"line_end":6,"column_start":31,"column_end":44,"is_primary":true,"text":[{"text":"        WindowsAndMessaging::{FindWindowA, GetForegroundWindow, GetWindowTextA},","highlight_start":31,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\main.rs","byte_start":61,"byte_end":68,"line_start":2,"line_end":3,"column_start":21,"column_end":5,"is_primary":true,"text":[{"text":"use windows::Win32::{","highlight_start":21,"highlight_end":22},{"text":"    Foundation::HWND,","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\main.rs","byte_start":302,"byte_end":306,"line_start":7,"line_end":8,"column_start":6,"column_end":2,"is_primary":true,"text":[{"text":"    },","highlight_start":6,"highlight_end":7},{"text":"};","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `FindWindowA` and `Foundation::HWND`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Foundation::HWND,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        WindowsAndMessaging::{FindWindowA, GetForegroundWindow, GetWindowTextA},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":1078,"byte_end":1082,"line_start":29,"line_end":29,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":56,"highlight_end":60}],"label":"expected `VIRTUAL_KEY`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1078,"byte_end":1078,"line_start":29,"line_end":29,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\main.rs","byte_start":1082,"byte_end":1082,"line_start":29,"line_end":29,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:29:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `VIRTUAL_KEY`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: \u001b[0m\u001b[0m\u001b[38;5;10mwindows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(\u001b[0m\u001b[0mkey3\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":1258,"byte_end":1262,"line_start":33,"line_end":33,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":56,"highlight_end":60}],"label":"expected `VIRTUAL_KEY`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1258,"byte_end":1258,"line_start":33,"line_end":33,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\main.rs","byte_start":1262,"byte_end":1262,"line_start":33,"line_end":33,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:33:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `VIRTUAL_KEY`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: \u001b[0m\u001b[0m\u001b[38;5;10mwindows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(\u001b[0m\u001b[0mkey2\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":1438,"byte_end":1442,"line_start":37,"line_end":37,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":56,"highlight_end":60}],"label":"expected `VIRTUAL_KEY`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1438,"byte_end":1438,"line_start":37,"line_end":37,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\main.rs","byte_start":1442,"byte_end":1442,"line_start":37,"line_end":37,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:37:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `VIRTUAL_KEY`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: \u001b[0m\u001b[0m\u001b[38;5;10mwindows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(\u001b[0m\u001b[0mkey1\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, dwFlags: KEYEVENTF_KEYUP, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":1727,"byte_end":1728,"line_start":46,"line_end":46,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"        if hwnd.0 == 0 {","highlight_start":22,"highlight_end":23}],"label":"expected `*mut c_void`, found `usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":1717,"byte_end":1723,"line_start":46,"line_end":46,"column_start":12,"column_end":18,"is_primary":false,"text":[{"text":"        if hwnd.0 == 0 {","highlight_start":12,"highlight_end":18}],"label":"expected because this is `*mut c_void`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected raw pointer `*mut c_void`\n          found type `usize`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if you meant to create a null pointer, use `std::ptr::null_mut()`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1727,"byte_end":1728,"line_start":46,"line_end":46,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"        if hwnd.0 == 0 {","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"std::ptr::null_mut()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:46:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if hwnd.0 == 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `*mut c_void`, found `usize`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected because this is `*mut c_void`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected raw pointer `\u001b[0m\u001b[0m\u001b[1m\u001b[35m*mut c_void\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                     found type `\u001b[0m\u001b[0m\u001b[1m\u001b[35musize\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you meant to create a null pointer, use `std::ptr::null_mut()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        if hwnd.0 == \u001b[0m\u001b[0m\u001b[38;5;10mstd::ptr::null_mut()\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":616,"byte_end":620,"line_start":17,"line_end":17,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, ..Default::default() } },","highlight_start":56,"highlight_end":60}],"label":"expected `VIRTUAL_KEY`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":616,"byte_end":616,"line_start":17,"line_end":17,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, ..Default::default() } },","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\main.rs","byte_start":620,"byte_end":620,"line_start":17,"line_end":17,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, ..Default::default() } },","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:17:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key1, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `VIRTUAL_KEY`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: \u001b[0m\u001b[0m\u001b[38;5;10mwindows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(\u001b[0m\u001b[0mkey1\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":770,"byte_end":774,"line_start":21,"line_end":21,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, ..Default::default() } },","highlight_start":56,"highlight_end":60}],"label":"expected `VIRTUAL_KEY`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":770,"byte_end":770,"line_start":21,"line_end":21,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, ..Default::default() } },","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\main.rs","byte_start":774,"byte_end":774,"line_start":21,"line_end":21,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, ..Default::default() } },","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:21:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key2, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `VIRTUAL_KEY`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: \u001b[0m\u001b[0m\u001b[38;5;10mwindows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(\u001b[0m\u001b[0mkey2\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":924,"byte_end":928,"line_start":25,"line_end":25,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, ..Default::default() } },","highlight_start":56,"highlight_end":60}],"label":"expected `VIRTUAL_KEY`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":924,"byte_end":924,"line_start":25,"line_end":25,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, ..Default::default() } },","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\main.rs","byte_start":928,"byte_end":928,"line_start":25,"line_end":25,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, ..Default::default() } },","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:25:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: key3, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `VIRTUAL_KEY`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `windows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Anonymous: INPUT_0 { ki: KEYBDINPUT { wVk: \u001b[0m\u001b[0m\u001b[38;5;10mwindows::Win32::UI::Input::KeyboardAndMouse::VIRTUAL_KEY(\u001b[0m\u001b[0mkey3\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, ..Default::default() } },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 7 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 7 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
